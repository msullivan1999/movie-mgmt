/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

application {
    // Define the main class for the application.
    mainClass = 'ticket.App'
}

run {
    // Enable stdin on `gradle run`
    standardInput = System.in
}

jar {
    manifest {
        attributes 'Main-Class': 'ticket.App'
    }
}

//Dont include frontend
def jacocoExclude = ['**/App.class', '**/BookingRequestHandler.class', '**/ticket/lib']

jacocoTestReport {
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExclude)
        })
    }
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}
